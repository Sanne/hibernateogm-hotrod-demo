<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.hibernate.ogm.demos</groupId>
        <artifactId>wildfly-hotrod-demo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>wildfly-hotrod-demo-integrationtests</artifactId>
    <name>Integration tests for the demo</name>

    <properties>
        <version.org.wildfly.arquillian>1.0.2.Final</version.org.wildfly.arquillian>
        <wildfly.home>${project.build.directory}/wildfly-${version.wildfly}</wildfly.home>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <infinispan-server.home>${project.build.directory}/infinispan-server-${version.infinispan}</infinispan-server.home>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- We override the version of ShrinkWrap Maven Resolver from 
                Arquillian BOM: this section must be declared before the Arquillian bom import -->
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${version.shrinkwrap}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Imports compatible versions for each Arquillian module -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.arquillian}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>${version.arquilliancontainer}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!--  get the WildFly application server -->
                                <artifactItem>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>${version.wildfly}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                                <!-- get an updated module set for Hibernate ORM -->
                                <artifactItem>
                                    <groupId>org.hibernate</groupId>
                                    <artifactId>hibernate-orm-modules</artifactId>
                                    <version>${version.hibernateorm}</version>
                                    <classifier>${hibernateWildflyClassifier}</classifier>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${wildfly.home}/modules</outputDirectory>
                                </artifactItem>
                                <!--  Add Hibernate OGM modules to WildFly -->
                                <artifactItem>
                                    <groupId>org.hibernate.ogm</groupId>
                                    <artifactId>hibernate-ogm-modules</artifactId>
                                    <classifier>${hibernateWildflyClassifier}</classifier>
                                    <version>${version.hibernateogm}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${wildfly.home}/modules</outputDirectory>
                                </artifactItem>
                                <!-- get Hibernate Search as well -->
	                            <artifactItem>
                                    <groupId>org.hibernate</groupId>
                                    <artifactId>hibernate-search-modules</artifactId>
                                    <version>${version.hibernatesearch}</version>
                                    <classifier>${hibernateWildflyClassifier}</classifier>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${wildfly.home}/modules</outputDirectory>
                                </artifactItem>
                                <!--  Add Infinispan client modules to WildFly -->
                                <artifactItem>
                                    <groupId>org.infinispan</groupId>
                                    <artifactId>infinispan-as-embedded-modules</artifactId>
                                    <version>${version.infinispan}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${wildfly.home}/modules</outputDirectory>
                                </artifactItem>
                                <!--  also get the Infinispan Server, to run separately -->
                                <artifactItem>
                                    <groupId>org.infinispan.server</groupId>
                                    <artifactId>infinispan-server-build</artifactId>
                                    <version>${version.infinispan}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- Copy the Infinispan Server configuration files so we can use 
                        our custom configurations -->
                    <execution>
                        <id>configure-infinispan-server</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${infinispan-server.home}/standalone/configuration</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${basedir}/infinispan-server-testconfig</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
